#!/usr/bin/python3
# Данный пример ищет модули на шине и выводит информацию о них.
                                            #
import smbus                                # Подключаем модуль шины smbus(i2c)
choices = {                                 # Создаём словарь устройств
    0x01: "кнопкой",
    0x02: "светодиодом",
    0x03: "потенциометром",
    0x04: "звукоизлучателем",
    0x05: "датчиком SHT",
    0x06: "датчиком света",
    0x07: "расширителем выводов",
    0x08: "LED матрицей",
    0x09: "Энкодером",
    0x0A: "реле на 2 канала",
    0x0B: "реле на 4 канала",
    0x0C: "силовым ключём 4 N",
    0x0D: "силовым ключём 4 P",
    0x0E: "силовым ключём 4 N",
    0x0F: "силовым ключём 4 P",
    0x10: "бампер с датчиками линий",
    0x11: "джойстик",
    0x12: "LCD конвертер в I2C",
    0x13: "клавиатура",
    0x14: "мотор-редуктор с драйвером",
    0x15: "реле на 1 канал",
    0x16: "LED индикатор на 4 разряда",
}
try:
  bus = smbus.SMBus(1)                      # Пробуем открыть файл шины i2c
except FileNotFoundError:                   # Если файл не найден
  print("Шина i2c не включена. Запустите"   #
        "`raspi-config` и включите шину.")  # Выводим сообщение в stdout
except:                                     # Если любая другая ошибка
  print("неизвестная ошибка")               # Выводим сообщение в stdout
else:                                       # Если ошибок не найдено
  for i in range(7, 127):                   # Проходим по всем доступным адресам на шине I2C ...
    try:                                    # Пробуем вывести адрес
      bus.write_quick(i)                    # устройства на шину
    except OSError:                         # Если устройства с текущим адресом не на шине
      continue                              # Возвращаемся в начало цикла for со следующим адресом
    except:                                 # Если любая другая ошибка
      print("неизвестная ошибка")           # Выводим сообщение в stdout
    else:                                   # Если устройство найдено
      print("Устройство с адресом"
            " %#.2X" % i, end='')            # Выводим адрес в stdout
      k = bus.read_i2c_block_data(i, 0x04)  # Читаем регистры, начиная с 4
      if k[2]>>1 == i and (k[3]==0xc3
                          or k[3]==0x3c):   # Если значение второго элемента массива k совпадает с адресом устройства, а в третьем элементе хранится идентификатор 0xC3 (модуль Metro), или 3С (модуль Flash), то ...
        print(" является ", end='')         # Выводим текст в stdout
        model = choices.get(k[0],
              "неизвестным модулем")        # Cравниваем модель модуля со списком, если ничего не совпало - записываем в model строку по умолчанию
        print("%s с версией прошивки %d."
               % (model, k[1]))             # Выводим модель и версию в stdout
      else:                                 # Выводим текст, если устройство не опознано
        print(" не опознано")               # или на шине два устроойства с одним адресом
